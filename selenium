from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys

# Initialize the WebDriver (assuming you are using Firefox)
driver = webdriver.Firefox()

# Navigate to the desired webpage
driver.get('http://example.com')

# Replace 'your_tabindex_value' with the actual tabindex value you are looking for
tabindex_value = 'your_tabindex_value'
element = driver.find_element(By.CSS_SELECTOR, f'[tabindex="{tabindex_value}"]')

# Click the element to open the pop-up
element.click()

# Store the ID of the original window
original_window = driver.current_window_handle

# Wait for the new window or tab
WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))

# Loop through until we find a new window handle
for window_handle in driver.window_handles:
    if window_handle != original_window:
        driver.switch_to.window(window_handle)
        break

# Wait for the username field to be present in the new window
username_selector = 'input[name="username"]'  # Update with the actual selector
password_selector = 'input[name="password"]'  # Update with the actual selector

try:
    username_element = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.CSS_SELECTOR, username_selector))
    )
    
    # Enter the username
    username_element.send_keys('your_username')  # Update with the actual username
    
    # Press the tab key to move to the password field
    username_element.send_keys(Keys.TAB)

    # Wait for the password field to be present and then enter the password
    password_element = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.CSS_SELECTOR, password_selector))
    )
    password_element.send_keys('your_password')  # Update with the actual password
    
    # Submit the form (usually pressing Enter in the password field submits the form)
    password_element.send_keys(Keys.RETURN)
    
    # Optionally, switch back to the original window if needed
    driver.switch_to.window(original_window)
    
except Exception as e:
    print(f"An error occurred: {e}")
    driver.quit()

# Continue with other actions or close the browser
# driver.quit()
