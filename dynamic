import dash
from dash import dcc, html, Output, Input, State
import pandas as pd
from dash.exceptions import PreventUpdate
import io
import base64

app = dash.Dash(__name__)

app.layout = html.Div([
    html.Button("Generate CSV", id="generate-btn"),
    html.Div(id="csv-data", style={"display": "none"}),
    html.Div(id="csv-output")
])

@app.callback(
    Output("csv-data", "children"),
    [Input("generate-btn", "n_clicks")]
)
def generate_csv(n_clicks):
    if not n_clicks:
        raise PreventUpdate
    
    # Generate dummy data (you can replace this with your own data)
    data = {
        "Name": ["John", "Jane", "Alice"],
        "Age": [30, 25, 35],
        "City": ["New York", "Los Angeles", "Chicago"]
    }
    df = pd.DataFrame(data)
    
    # Convert DataFrame to CSV string
    csv_string = df.to_csv(index=False)
    
    return csv_string

@app.callback(
    Output("csv-output", "children"),
    [Input("csv-data", "children")]
)
def process_csv(csv_data):
    if not csv_data:
        raise PreventUpdate
    
    # Parse CSV string back to DataFrame
    df = pd.read_csv(io.StringIO(csv_data))
    
    # Process DataFrame (e.g., display in a DataTable)
    table = html.Table([
        html.Thead(html.Tr([html.Th(col) for col in df.columns])),
        html.Tbody([
            html.Tr([
                html.Td(df.iloc[i][col]) for col in df.columns
            ]) for i in range(len(df))
        ])
    ])
    
    return table

if __name__ == "__main__":
    app.run_server(debug=True)
